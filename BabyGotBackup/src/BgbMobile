import java.io.File;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.ListIterator;

import android.app.Activity;
import android.graphics.Path;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.AdapterView.OnItemLongClickListener;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.ListView;
import android.widget.Toast;

import jcifs.smb.*;

public class MainActivity extends Activity {
	
	String user = "Kraete";
    String password = "Spikey1!!";
    String address = "192.168.1.1";
    String smbroot = "smb://rothbard/bgb/";
    String path = "";
    boolean inout = false;
    String[] filearray;
    ListView fileListView;
	ArrayList<String> list = new ArrayList<String>();
	ArrayAdapter<String> adapter;
	BgbSession sesh = new BgbSession(user);
	SmbHandler smbHandler;
	
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);	
	    Button inout      = (Button) findViewById(R.id.button1);
	    Button go         = (Button) findViewById(R.id.button2);
	    inout.setOnClickListener(inoutClickHandler);
	    go.setOnClickListener(goClickHandler);
		fileListView = (ListView) findViewById(R.id.filelist);
		
    
    	adapter=new ArrayAdapter<String>(fileListView.getContext(),
		           android.R.layout.simple_list_item_1, list);
		fileListView.setAdapter(adapter); 
		fileListView.setOnItemClickListener(itemClickListener);
		fileListView.setOnItemLongClickListener(itemLongClickListener);
		new LongOperation().execute("");
	}
	
	private class LongOperation extends AsyncTask<String, Void, String> {

        @Override
        protected String doInBackground(String... params) {
        	try {
        		if(inout){
        			//restore
        			smbHandler = new SmbHandler(address, user, password);
					filearray = smbHandler.getList(smbroot+path).toArray(new String[smbHandler.getList(smbroot+path).size()]);
        		}
        		else{
        			//backup
        			filearray = new File("/sdcard/bgb/"+path).list();        			        				
        		}
			} catch (Exception e) {
			   System.out.println(e.getMessage());
			}
			return "done";
        }

        @Override
        protected void onPostExecute(String result) {
        	list.clear();
        	if(!(path == "")){
        		list.add("..");
        	}
			for(int i = 0; i < filearray.length; i++){
				list.add(filearray[i]);
			}
			list.add(path);
			adapter.notifyDataSetChanged();
        }

        @Override
        protected void onPreExecute() {}

        @Override
        protected void onProgressUpdate(Void... values) {}
    }        	
	
	  View.OnClickListener inoutClickHandler = new View.OnClickListener() {
	    public void onClick(View v) {
	      if(inout){
	    	  //restore
	    	  path = "";
	    	  v.animate().rotationBy(180);
			  new LongOperation().execute("");
	    	  inout = false;
	      }else{
	    	  //backup
	    	  path = "";
	    	  v.animate().rotationBy(180);
			  new LongOperation().execute("");
	    	  inout = true;
	      }
	    }
	  };
	  
	  View.OnClickListener goClickHandler = new View.OnClickListener() {
		  public void onClick(View v) {

			ListIterator<String> i = sesh.getFileList().listIterator();
			while (i.hasNext()){
				Toast.makeText(getApplicationContext(), i.next(), Toast.LENGTH_SHORT).show();
			}
		  }
	  };
	  
	  OnItemClickListener itemClickListener = new OnItemClickListener()
      {
			public void onItemClick(AdapterView<?> arg0, View arg1, int arg2, long arg3) {					
				String filename = arg0.getAdapter().getItem(arg2).toString();				
				if(filename.endsWith("..")){
					path += filename;
					int index = path.lastIndexOf("/", path.length()-4)+1;
					if (index > 0){
						path = path.substring(0, index);						
					}else{ path = "";}
					new LongOperation().execute("");
				}				
				else if(filename.endsWith("/")){
					path += filename;
					new LongOperation().execute("");
				}
				else{
					try { 
						sesh.addFile(path+filename);
					} catch (Exception e) {
						e.printStackTrace();
					}
				}
			}
      };
      
      OnItemLongClickListener itemLongClickListener = new OnItemLongClickListener(){

		@Override
		public boolean onItemLongClick(AdapterView<?> arg0, View arg1, int arg2, long arg3) {
			path += arg0.getAdapter().getItem(arg2).toString();	
			if(path.endsWith("..")){
				path = "";
				new LongOperation().execute(""); 
			}else if(path.endsWith("/")){				
				new addDirectory().execute("");
			}else{				
			}			
			return true;
		}    	  
      };
      
      private class addDirectory extends AsyncTask<String, Void, String> {

		@Override
		protected String doInBackground(String... params) {
			try {
        		if(inout){
        			//restore
        			smbHandler = new SmbHandler(address, user, password);
					filearray = smbHandler.getList(smbroot+path).toArray(new String[smbHandler.getList(smbroot+path).size()]);
					for(int i = 0; i < filearray.length; i++){
						if(filearray[i].endsWith("/")){
							
						}else{
							sesh.addFile(path+filearray[i]);
						}
					}
        		}
        		else{
        			//backup
        			filearray = new File("/sdcard/bgb/"+path).list();        			        				
        		}
			} catch (Exception e) {
			   System.out.println(e.getMessage());
			}
			return "true";
		}
      
      }
}
