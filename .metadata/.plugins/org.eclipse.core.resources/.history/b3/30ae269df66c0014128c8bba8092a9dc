import java.awt.EventQueue;
import javax.swing.ButtonGroup;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JRadioButton;
import javax.swing.JComboBox;

import javax.swing.JCheckBox;

import java.awt.Font;

import javax.swing.JTextField;
import javax.swing.JButton;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.DefaultComboBoxModel;


public class BackupDialog implements ActionListener{

	private JFrame frmCreateANew;
	private JTextField fileLocation;
	private JTextField backupLocation;
	private JButton fileBtn1;
	private JButton fileBtn2;
	private JRadioButton scheduleRadio;
	private JRadioButton manualRadio;
	private JComboBox<String> comboBox;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					BackupDialog window = new BackupDialog();
					window.frmCreateANew.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 */
	public BackupDialog() {
		initialize();
	}

	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		frmCreateANew = new JFrame();
		frmCreateANew.setTitle("Backup");
		frmCreateANew.setBounds(100, 100, 304, 435);
		frmCreateANew.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frmCreateANew.setResizable(false);
		
				ButtonGroup backupType = new ButtonGroup();
		
				manualRadio = new JRadioButton("Manual Backup");
				manualRadio.setBounds(10, 24, 129, 23);
				backupType.add(manualRadio);
				manualRadio.addActionListener(this);
				
				scheduleRadio = new JRadioButton("Schedule Backup");
				scheduleRadio.setBounds(10, 56, 129, 23);
				backupType.add(scheduleRadio);
				scheduleRadio.addActionListener(this);
				
				comboBox = new JComboBox<String>();
				comboBox.setEnabled(false);
				comboBox.setModel(new DefaultComboBoxModel(new String[] {"hourly", "daily", "weekly"}));
				comboBox.setBounds(26, 86, 129, 20);
				
				JCheckBox encryptCheck = new JCheckBox("Encrypt");
				encryptCheck.setBounds(10, 132, 105, 23);
				
				JCheckBox compressCheck = new JCheckBox("compress");
				compressCheck.setBounds(10, 158, 105, 23);
				
				JLabel lblNewLabel = new JLabel("File Location");
				lblNewLabel.setBounds(10, 200, 71, 16);
				lblNewLabel.setFont(new Font("Tahoma", Font.PLAIN, 13));
				
				fileLocation = new JTextField();
				fileLocation.setBounds(10, 227, 190, 23);
				frmCreateANew.getContentPane().setLayout(null);
				frmCreateANew.getContentPane().add(manualRadio);
				frmCreateANew.getContentPane().add(scheduleRadio);
				frmCreateANew.getContentPane().add(comboBox);
				frmCreateANew.getContentPane().add(encryptCheck);
				frmCreateANew.getContentPane().add(compressCheck);
				frmCreateANew.getContentPane().add(lblNewLabel);
				frmCreateANew.getContentPane().add(fileLocation);
				
				fileBtn1 = new JButton(" ...");
				fileBtn1.setBounds(211, 227, 39, 23);
				frmCreateANew.getContentPane().add(fileBtn1);
				fileBtn1.addActionListener(this);
				
				JLabel lblBackupLocation = new JLabel("Backup Location");
				lblBackupLocation.setFont(new Font("Tahoma", Font.PLAIN, 13));
				lblBackupLocation.setBounds(10, 271, 105, 23);
				frmCreateANew.getContentPane().add(lblBackupLocation);
				
				backupLocation = new JTextField();
				backupLocation.setBounds(10, 298, 190, 23);
				frmCreateANew.getContentPane().add(backupLocation);
				
				fileBtn2 = new JButton(" ...");
				fileBtn2.setBounds(211, 298, 39, 23);
				frmCreateANew.getContentPane().add(fileBtn2);
				
				JButton btnCreateBackup = new JButton("Create Backup");
				btnCreateBackup.setBounds(83, 349, 129, 23);
				frmCreateANew.getContentPane().add(btnCreateBackup);
				fileBtn2.addActionListener(this);
		
	}
	
	public void actionPerformed(ActionEvent e) {
		if(e.getSource() == manualRadio) {
			 comboBox.setEnabled(false);
		 }
		 if(e.getSource() == scheduleRadio) {
			 comboBox.setEnabled(true);
		 }
		 if(e.getSource() == fileBtn1) {
			 final JFileChooser fc = new JFileChooser();
			 int returnVal = fc.showOpenDialog(frmCreateANew);
			 String location = fc.getSelectedFile().getAbsolutePath();
			 fileLocation.setText(location);
		 }
		 if(e.getSource() == fileBtn2) {
			 final JFileChooser fc = new JFileChooser();
			 int returnVal = fc.showOpenDialog(frmCreateANew);
			 String location = fc.getSelectedFile().getAbsolutePath();
			 backupLocation.setText(location);
		 }
	}
}

